openapi: 3.0.0
info:
    title: Loyalty API
    version: 1.0.0

paths:
    /user/web:
        post:
            summary: Sign up with web credentials
            tags:
                - User
            requestBody:
                required: True
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CredentialsForm"
            responses:
                "200":
                    description: "Success"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/User"
                "409":
                    description: User with this username already exists

    /user/login:
        post:
            summary: Login user
            tags:
                - User
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/CredentialsForm"
            responses:
                "200":
                    description: Successfully login
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/AccessToken"
                "422":
                    description: Bad Request
                "403":
                    description: Login failed

    /client/:
        post:
            security:
                - bearer: []
            summary: Create a new client
            tags:
                - Client
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/ClientForm"
            responses:
                "200":
                    description: Successfully created client
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Client"
                "422":
                    description: Bad Request
    /business/:
        post:
            security:
                - bearer: []
            summary: Create a new business
            tags:
                - Business
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "#/components/schemas/BusinessForm"
            responses:
                "200":
                    description: Successfully created business
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Business"
                "422":
                    description: Bad Request
                "409":
                    description: Business with this name already exists

components:
    securitySchemes:
        bearer:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        CredentialsForm:
            type: object
            required:
                - username
                - password
            properties:
                username:
                    type: string
                    minLength: 3
                    maxLength: 100
                    example: "business"
                password:
                    type: string
                    minLength: 6
                    maxLength: 100
                    example: "securePassword123"
                    format: password

        ClientForm:
            type: object
            required:
                - full_name
                - age
                - gender
                - phone
                - lon
                - lat
            properties:
                full_name:
                    type: string
                    minLength: 4
                    maxLength: 250
                    example: "John Doe"
                age:
                    type: integer
                    minimum: 0
                    maximum: 100
                    example: 30
                gender:
                    type: string
                    enum: ["MALE", "FEMALE", "OTHER"]
                    example: "MALE"
                phone:
                    type: string
                    example: "+79281859225"
                lon:
                    type: float
                    minimum: -90
                    maximum: 90
                    example: 37.6156
                lat:
                    type: float
                    minimum: -180
                    maximum: 180
                    example: 55.7522
        BusinessForm:
            type: object
            required:
                - name
                - contact_email
                - lon
                - lat
            properties:
                name:
                    type: string
                    minLength: 2
                    maxLength: 250
                    example: "ООО БНАЛ"
                contact_phone:
                    type: string
                    example: "+79281659225"
                contact_email:
                    type: string
                    format: email
                    example: "structnull@yandex.ru"
                lon:
                    type: float
                    minimum: -90
                    maximum: 90
                    example: 37.6156
                lat:
                    type: float
                    minimum: -180
                    maximum: 180
                    example: 55.7522

        Client:
            type: object
            required:
                - client_id
                - full_name
                - age
                - gender
                - phone
                - lon
                - lat
                - created_at
            properties:
                client_id:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
                full_name:
                    type: string
                    example: "John Doe"
                age:
                    type: integer
                    example: 30
                gender:
                    type: string
                    enum: ["MALE", "FEMALE"]
                    example: "MALE"
                phone:
                    type: string
                    example: "+79281559535"
                lon:
                    type: float
                    example: 37.6156
                lat:
                    type: float
                    example: 55.7522
                created_at:
                    type: string
                    format: date-time
        Business:
            type: object
            required:
                - business_id
                - name
                - contact_email
                - contact_phone
                - lon
                - lat
                - created_at
            properties:
                business_id:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-49d4-a716-446655440000"
                name:
                    type: string
                    example: "ООО Бнал"
                contact_phone:
                    type: string
                    nullable: true
                    example: "+79281559535"
                contact_email:
                    type: string
                    format: email
                    example: "+79281559535"
                lon:
                    type: float
                    example: 37.6156
                lat:
                    type: float
                    example: 55.7522
                created_at:
                    type: string
                    format: date-time

        User:
            type: object
            required:
                - client
                - user_id
                - business
            properties:
                client:
                    $ref: "#/components/schemas/Client"
                business:
                    $ref: "#/components/schemas/Business"
                user_id:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"

        AccessToken:
            type: object
            required:
                - token
                - user_id
            properties:
                user_id:
                    type: string
                    format: uuid
                    example: "550e8400-e29b-41d4-a716-446655440000"
                token:
                    type: string
